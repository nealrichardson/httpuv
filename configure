PKG_CONFIG_NAME="libuv"
LIBUV_VERSION_REQUIRED="$PKG_CONFIG_NAME >= 1.43 $PKG_CONFIG_NAME < 2"

# If unset (default), will try to find libuv on system and fall back to bundled
# If true (case insensitive), will not look for system library
# If false, will not fall back to bundled if system library not found
USE_BUNDLED_LIBUV=`echo $USE_BUNDLED_LIBUV | tr '[:upper:]' '[:lower:]'`

if [ `uname -s` = "Darwin" ]; then
  # Always do static linking on macOS
  PKG_CONFIG="pkg-config --static"
else
  PKG_CONFIG="pkg-config"
fi

# First, look for suitable libuv installed on the system 
if [ "${USE_BUNDLED_LIBUV}" != "true" ] && ${PKG_CONFIG} --exists ''"${LIBUV_VERSION_REQUIRED}"'' 2>&1; then
  echo "** Using libuv found by pkg-config in `${PKG_CONFIG} --variable=prefix --silence-errors ${PKG_CONFIG_NAME}`"
  PKG_CFLAGS=`${PKG_CONFIG} --cflags --silence-errors ${PKG_CONFIG_NAME}`
  PKG_LIBS=`${PKG_CONFIG} --libs ${PKG_CONFIG_NAME}`
  DEPS=""
elif [ "${USE_BUNDLED_LIBUV}" != "false" ]; then
  # If not found, use the bundled copy (unless directed otherwise)
  echo "** Using bundled copy of libuv"
  PKG_CFLAGS="-Ilibuv/include"
  PKG_LIBS="./libuv/.libs/libuv.a"
  # By setting DEPS, this triggers the libuv build in src/Makevars
  DEPS="libuv/.libs/libuv.a"
else
  echo "** Did not find suitable libuv on your system,"
  echo "** and not building from source because USE_BUNDLED_LIBUV=false."
  echo "** Please install ${LIBUV_VERSION_REQUIRED} or unset USE_BUNDLED_LIBUV"
  exit 1
fi

# For debugging
echo "** PKG_CFLAGS=$PKG_CFLAGS"
echo "** PKG_LIBS=$PKG_LIBS"
# Write to Makevars
sed -e "s|@cflags@|$PKG_CFLAGS|" -e "s|@libs@|$PKG_LIBS|" -e "s|@deps@|$DEPS|" src/Makevars.in > src/Makevars

# Success
exit 0
